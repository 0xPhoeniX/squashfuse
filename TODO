Patches for squashfs-tools: https://github.com/plougher/squashfs-tools/pull/3

Build system
	Autotools versioning
		Currently autoconf 2.68, automake 1.11 tested. Use AC_PREREQ?
		Test older versions
	libsquashfuse: Install it as a library
	Debug builds: configure option?
	Mac builds
		Support specifying SDK, arch, universal builds
	We need a real test suite
	Fully process squashfs_fs.h directly from the kernel version
		Remove [0] lines for Windows
		Add __le## for many OSes
		Remove function macros
		Redefine INVALID_BLK
		etc...

Features
	Design a better API for libsquashfuse. Ideally we'd use heap pointers for
    backwards compatibility, instead of the stack allocation we use now.
	Use better error codes, error reporting, sanity checks
	Support/emulate non-namespaced xattrs, for OS X?
	squashfs 3 and earlier support?
	LZMA1 compression?

Performance
  Use use_ino flag in high-level? Other flags?
	Multi-threading
    We currently support multiple threads calling into libsquashfuse
      Some OSes (like OS X) don't actually take advantage of it
    Would be nice to actually use concurrency to speed up operations, eg:
      read UIDs in parallel
	Byte swapping
		Use platform-specific optimizations (eg: libkern/OSByteOrder.h)
		Also arch-specific
	Block index: Create incrementally, as needed?
    It's pretty fast now for even enormous files
	Speculative read-ahead? Trust OS to do it?
	Caching and threading strategy delegation?
		eg: Small caches for low-memory; huge caches for complete extraction 

Platform support
	Known bad
		Windows
			Dokan/DokanX/fuse4win: all crash for me
			CBFS: Totally different API, expensive
			Explorer Namespace Extensions: hard to write, includes GUI code
      IFS driver: hard to write (kernel)
			Pismo File Mount?
			FUSE-NT?
	No low-level fuse
		Solaris 11 (uvfs/fuse): High-level sort-of works
  Work on platforms with 32-bit off_t better (pread64, off64_t)

Programs
  Network filesystem: For systems without FUSE, we could use an FTP or
    WebDAV server to vend the filesystem.
  Cross-language: Try to embed into eg: Java or Ruby
  Implement unsquashfs
  Plugin for File Roller, The Unarchiver, etc
  PUFFS API

Old versions
	v3
		- Both endianesses are possible
		- Different superblock from v4 (same as 1, 2)
		- Different inode structs
		- No xattrs
		- UIDs and GIDs separate
	v2
		- Some superblock fields in different place (guid_start_2, etc)
		- Different inode structs, fragment entry struct, dir structs
	v1
		- Block size different in superblock (block_size_1)
		- No fragments
		- Different inode structs
