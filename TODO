For 0.1
	Submit squashfs-tools patches

Build system
	Autotools versioning
		Currently autoconf 2.68, automake 1.11 tested. Use AC_PREREQ?
		Test older versions
	libsquashfuse
		Separate out a library with a proper API
		Try connecting it to File Roller, The Unarchiver, etc
	Debug builds: configure option?
	Mac builds
		Support specifying SDK, arch, universal builds
		Why don't builds on Lion with 10.4 SDK work?
	Test suite?
	Fully process squashfs_fs.h direct from kernel
		Remove [0] lines for Windows
		Add __le## for many OSes
		Remove function macros
		Redefine INVALID_BLK
		etc...

Features
	Design a good API for libsquashfuse
	Use better error codes, error reporting, sanity checks
	Support/emulate non-namespaced xattrs, for OS X?
	Write a clone of unsquashfs using libsquashfuse?
	squashfs 3 and earlier support?
	LZMA1 compression?

Performance
	Multi-threading
		Caches, blockidx aren't thread safe
		Use a thread pool? Or one thread per request?
		Read metadata (eg: UIDs) in parallel?
		How do we get FUSE to do multi-threading? On some OSes it just doesn't
	Byte swapping
		Use platform-specific optimizations (eg: libkern/OSByteOrder.h)
		Also arch-specific
	Block index: Create incrementally, as needed?
	Speculative read-ahead? Trust OS to do it?
	Caching and threading strategy delegation?
		eg: Small caches for low-memory; huge caches for complete extraction 
	Profile for optimization opportunities

Misc
	mksquashfs is slow, write a faster version?
    Might be spurious, Mac-related

Platform support
	Known bad
		QNX 6.5 (qfuse)
			fuse_session_add_chan() crashes
			High-level crashes too
		Windows
			Dokan/DokanX/fuse4win: all crash for me
			CBFS: Totally different API, expensive
			Explorer Namespace Extensions: hard to write, includes GUI code
      IFS driver: hard to write (kernel)
			Pismo File Mount?
			FUSE-NT?
	Linux kernel < 2.4.20
		Requires fuse < 2.4.0. Maybe high-level?
		LUFS?
  Network filesystem workaround
    For systems without FUSE, we could use an FTP or WebDAV server to vend
      the filesystem.
	No low-level fuse
		Solaris 11 (uvfs/fuse): High-level sort-of works
		Minix 3.2 (puffs/refuse): High-level won't work
		Haiku (userlandfs): High-level won't work, userlandfs hard to build
		Hurd (libfuse): High-level works fine, version 2.5

Old versions
	v3
		- Both endianesses are possible
		- Different superblock from v4 (same as 1, 2)
		- Different inode structs
		- No xattrs
		- UIDs and GIDs separate
	v2
		- Some superblock fields in different place (guid_start_2, etc)
		- Different inode structs, fragment entry struct, dir structs
	v1
		- Block size different in superblock (block_size_1)
		- No fragments
		- Different inode structs
