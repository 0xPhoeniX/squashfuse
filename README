             squashfuse - http://github.com/vasi/squashfuse

What is it?
-----------
Squashfuse is a FUSE filesystem that allows a squashfs archive to be mounted in user-space. It is designed to be fast and memory-efficient, and supports most of the features of the squashfs format. It also has support for many different operating systems.

Squashfs is an efficiently compressed, read-only archive format. Support for squashfs is in the Linux kernel, and the format is commonly used on Live CD distributions. A squashfs archive can be created using `mksquashfs' from squashfs-tools.

Getting it
----------

The squashfuse git repository is here: http://github.com/vasi/squashfuse
Source tarballs can be downloaded here: https://sourceforge.net/projects/squashfuse/files/

Licensing
---------
squashfuse is available under the 2-clause BSD license. See the file LICENSE for details.

When to use it
--------------
Good situations to use squashfuse:

* On non-Linux operating systems
* When you don't have root access
* When you don't want to risk elevated privileges
* When squashfs is not built into your kernel, but FUSE is
* Instead of tar. Mksquashfs supports multi-threaded squashfs creation,
  and squashfuse allows you to browse through large archives without
  decompressing the whole thing.

Bad situations to use squashfuse:

* With very old squashfs archives
	Neither the Linux kernel nor squashfuse support squashfs versions < 4.0,
	use `unsquashfs' from squashfs-tools instead.

* To modify or create a squashfs archive
	Neither the Linux kernel nor squashfuse support write access,
	use `mksquashfs' from squashfs-tools instead.

* To extract an entire squashfs archive to a directory
	Mounting a filesystem just for this is inefficient, prefer `unsquashfs'.

* To mount the root filesystem `/'
	This may be possible, but has not been tested.

* When you're very concerned about stability
	The squashfs kernel module has much more testing than squashfuse.


Installation
------------
Many operating systems and architectures are supported by squashfuse. For more details see the section `Platform support'.

Runtime requirements:
- FUSE 2.5 or later
- At least one of the following compression libraries: zlib, lzo2, xz/liblzma,
	lz4
- (optional) libattr, for better extended attribute support on Linux

Build requirements:
- A C compiler, make, and sed
- (optional) pkgconfig, for detection of dependencies

Build and install with the usual `./configure && make && make install'. Some options for configure are listed below.

To build straight from git:
- autoconf 2.6
- automake 1.11
- libtool 2
Then run `./autogen.sh' and continue as above.


Usage
-----
To mount a filesystem: squashfuse [options] ARCHIVE MOUNTPOINT

To unmount an existing mount (Mac/BSD): umount MOUNTPOINT
                               (Linux): fusermount -u MOUNTPOINT

Features
--------
- zlib, LZO, LZMA2 and LZ4 compression
- Fast directory lookup
- Fast seeking within files
- Sparse file support
- Extended attribute support
- Metadata and block caching

Missing features:
- LZMA1 compression (deprecated)
- Support for squashfs versions less than 4.0
- Multi-threading


Known bugs
----------
- In a rare situation, squashfuse will use more memory, possibly much more, due to a quirk in the FUSE API. This only happens on 32-bit platforms with a large inode cache, when mounting squashfs archives created with "-no-exports".


Platform support
----------------
Squashfuse should work on any platform with a robust FUSE implementation that supports the low-level FUSE API.

The following operating systems are known to be supported:
* Linux
* Mac OS X
* FreeBSD
* NetBSD
* OpenIndiana
* Android


Alternatives
------------
Other squashfs implementations:
* Linux kernel module
* squashfs-tools
* 7-zip / p7zip
* Grub 2 bootloader

Websites
--------
- FUSE home page: http://fuse.sourceforge.net/
- squashfs home page: http://squashfs.sourceforge.net/
- squashfs-tools for non-Linux: https://github.com/vasi/squashfs-tools
