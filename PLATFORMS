Overview
--------
The following operating systems are supported:
* Linux
* Mac OS X
* FreeBSD
* NetBSD
* OpenIndiana
* Android

These are not supported by squashfuse_ll, just squashfuse:
* OpenBSD

These are only supported by the squashfuse_ls demo:
* Windows

These don't seem to work yet:
* Solaris
* QNX
* Minix
* Haiku
* Hurd

These don't have FUSE:
* iOS
* DragonFly BSD - NetBSD's `puffs' is in HEAD
* Commercial UNIX: AIX, HP-UX, etc


Details
-------
Systems are marked with the last tested version of squashfuse in square
brackets, eg: [0.1]

* Linux
  + Versions: Kernel 2.4.20 or later, most distros since ~2004
  + Tested on:
    - Ubuntu / Trusty  14.04             / i386, amd64           [0.2]
    - Ubuntu / Precise 12.04             / amd64                 [0.1]
    - Ubuntu / Lucid   10.04             / amd64                 [0.1]
    - Debian / squeeze  6.0              / i386, ppc, armel      [0.2]
    - CentOS / 3.9                       / i386      / FUSE 2.5  [0.2]
  + Requirements: CONFIG_FUSE_FS kernel option
  + Packages:
    - apt-get
      - Build: gcc make libc-dev libfuse-dev libz-dev liblzo2-dev \
        liblzma-dev liblz4-dev libattr1-dev pkg-config
      - Runtime: libfuse2 zlib1g liblzo2-2 liblzma2 liblz4-1
      - It's helpful to have fuse-utils as well
      - Older distros may not have liblz4, just leave it out.

* Mac OS X
  + Versions: Mac OS X 10.4 and later
  + Tested on:
    - 10.9 Mavericks    / x86_64 / OSXFUSE                      [0.2]
    - 10.7 Lion         / x86_64 / Tuxera FUSE, fuse4x, OSXFUSE [0.1]
    - 10.6 Snow Leopard / x86_64 / MacFUSE, fuse4x              [0.1]
    - 10.5 Leopard      / ppc    / MacFUSE                      [0.2]
    - 10.4 Tiger        / i386   / MacFUSE                      [0.2]
  + Requirements
    - Command-line developer tools
    - OSXFUSE, fuse4x or MacFUSE: http://osxfuse.github.com/,
      http://fuse4x.org/, http://code.google.com/p/macfuse/
  + Packages:
    - Not necessary if you just want a basic zlib-supporting squashfuse.
    - Some package managers require the full Xcode for FUSE,
      not just command-line tools.
    - MacPorts
      port install lzo2 liblzma zlib lz4 osxfuse
    - Fink
      fink install automake1.11 libtool2
      fink install lzo2 liblzma5 osxfuse-dev osxfuse-shlibs pkgconfig
    - Homebrew
      brew install lzo xz lz4 osxfuse
      # follow instructions from `brew info osxfuse'
  + Configure: If using a package manager, use --with-lzo=/wherever and/or
    --with-lz4=/wherever
  + Notes:
    - OS X uses a different naming scheme for extended attributes, so
      they may not be very useful
    - LZ4 often builds a dynamic liblz4 with a bad install_name on OS X.
      Either link statically, or use install_name_tool to correct it.

* FreeBSD
  + Versions: FreeBSD 6.0 and later
  + Tested on:
    - FreeBSD 10.0 / amd64 [0.2]
    - FreeBSD 9.0  / amd64 [0.1]
  + Packages: From ports or packages: fusefs-libs lzo2
    - On versions less than 10.0, also fusefs-kmod
  + Configure: ./configure --with-lzo=/usr/local
  + Notes:
    - Need to load the kernel module, eg: `kldload fuse'
    - Set `sysctl vfs.usermount=1' for non-root
    - FreeBSD FUSE doesn't support extended attributes

* NetBSD
  + Versions: NetBSD 6.0 and later
  + Tested on:
    - NetBSD 6.1      / i386 [0.2]
    - NetBSD 6.0 BETA / i386 [0.1]
  + Requirements: puffs enabled in kernel (present by default)
  + Packages: From pkgsrc: lzo
    - For the low-level API, also install perfuse fuse on 6.1
      (libperfuse libfuse on 6.0)
  + Configure: ./configure --with-fuse=/usr/pkg --with-lzo=/usr/pkg
  + Notes:
    - For low-level, set `sysctl -w kern.sbmax=$n', where n is at least 540672
    - Low-level is slightly buggy, prints warning messages
    - Set `sysctl -w vfs.generic.usermount=1' for non-root
    - NetBSD FUSE doesn't support extended attributes

* OpenIndiana
  + Versions: all
  + Tested on: OpenIndiana 151a8 / i386 [0.2]
  + Requirements: C compiler: gcc or Sun Studio 12.3 work
  + Packages: From `Spec Files Extra` repo: fusefs libfuse lzo xz
  + Notes:
    - Mounting requires root
    - OpenIndiana FUSE doesn't support extended attributes

* Android
  + Versions: all
  + Tested on:
    - Samsung Galaxy S4 / 4.4.2 / armel [0.2]
    - Android emulator  / 4.4.2 / x86   [0.2]
    - Android emulator  / 2.3.3 / armel [0.1]
  + Requirements:
    - Android SDK and NDK
    - CONFIG_FUSE_FS enabled in kernel. Recent Android kernels (> 4.2) usually
      have this enabled. Otherwise you'll have to compile your own kernel.
    - fuse-android: https://github.com/seth-hg/fuse-android
  + Configure:
    - Assuming $NDK_ROOT points to your Android NDK directory, and
      $FUSE_ANDROID points to your fuse-android directory
    - Create a standalone toolchain:
      `$NDK_ROOT/build/tools/make-standalone-toolchain.sh \
        --install-dir=toolchain --arch=arm'
    - Put it in the path: `export PATH=$PWD/toolchain/bin:$PATH'
    - Copy in android-fuse library and headers:
      `cp $FUSE_ANDROID/obj/local/armeabi-v7a/libfuse.a \
        toolchain/sysroot/usr/lib/
       cp -R $FUSE_ANDROID/jni/include/* toolchain/sysroot/usr/include/'
    - Disable pkg-config: `export PKG_CONFIG_LIBDIR='
    - Configure for cross-compiling, with --host=arm-linux-androideabi
  + Notes:
    - On Android, squashfuse only supports files < 2GB in size
    - Mounting requires root
    - Use the adb shell to run squashfuse
    - Usually /data/local/tmp is a location with exec privileges

* Windows
  + Only squashfuse_ls, there's no good FUSE on Windows
  + Versions: unknown
  + Tested on: Windows 7 / x64 [0.2]
  + Requirements:
    - A compiler. I've tested with Visual Studio 2013 Express
  + Configure: No need to run ./configure, just use the Visual Studio solution
    file.
  + Notes: For Unicode output, you may need to setup a different console font,
    and run `chcp 65001' to get the UTF-8 codepage.

* OpenBSD
  + Only squashfuse and squashfuse_ls, there's no low-level API
  + Versions: OpenBSD 5.4 and later
  + Tested on: OpenBSD 5.5 / amd64 [0.2]
  + Packages: lzo2 lz4 xz
  + Configure: ./configure --with-lzo=/usr/local --with-lz4=/usr/local
  + Notes:
    - Mounting requires root
    - OpenBSD FUSE doesn't support extended attributes
    - Has special snowflake breakage in readdir(), that squashfuse must work
      around
